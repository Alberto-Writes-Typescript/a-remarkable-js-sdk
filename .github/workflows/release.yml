name: Generate tagged release
on:
  push:
    branches:
      - main
jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Create Tag
        id: create_tag
        uses: actions/github-script@v5
        with:
          github-token: ${{secrets.GITHUB_TOKEN}}
          script: |
            const commitMessage = require('child_process')
              .execSync('git log --format=%B -n 1 ${{ github.event.after }}')
              .toString().trim()

            if (commitMessage.startsWith('bump to v')) {
              const version = commitMessage.split(' ')[2]

              const tag = {
                owner: context.repo.owner,
                repo: context.repo.repo,
                ref: 'refs/tags/' + version,
                sha: context.sha
              }

              github.rest.git.createRef(tag)

              return version
            }

            return null

      - name: Extract release notes
        id: extract_notes
        run: |
          VERSION=${{ steps.create_tag.outputs.result }}
          awk -v version="$VERSION" '/## \['version'\]/ {flag=1;next} /## \[/ {flag=0} flag {print}' CHANGELOG.md > RELEASE_NOTES.md
          cat RELEASE_NOTES.md

      - name: Create Release
        id: create_release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: ${{ steps.create_tag.outputs.result }}
          release_name: Release ${{ steps.create_tag.outputs.result }}
          body_path: RELEASE_NOTES.md
        if: steps.create_tag.outputs.result != null